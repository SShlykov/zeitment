basePath: /api/v1
definitions:
  config.HTTPError:
    properties:
      message:
        type: string
    type: object
  models.Book:
    properties:
      author:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      is_public:
        type: boolean
      owner:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.Chapter:
    properties:
      book_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      is_public:
        type: boolean
      number:
        type: integer
      pages:
        items:
          $ref: '#/definitions/models.Page'
        type: array
      text:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.Page:
    properties:
      chapter_id:
        type: string
      created_at:
        type: string
      id:
        type: string
      is_public:
        type: boolean
      text:
        type: string
      updated_at:
        type: string
    type: object
  models.Paragraph:
    properties:
      created_at:
        type: string
      id:
        type: string
      is_public:
        type: boolean
      page_id:
        type: string
      text:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:7077
info:
  contact: {}
  description: Это API для работы с книгами
  title: Book API
  version: "0.1"
paths:
  /books:
    get:
      description: Извлекает список всех книг
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/config.HTTPError'
      summary: Получить список книг
      tags:
      - Книги
    post:
      consumes:
      - application/json
      description: Создает новую книгу
      parameters:
      - description: Book object
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/config.HTTPError'
      summary: Создать книгу
      tags:
      - Книги
  /books/{id}:
    delete:
      description: Удаляет книгу по ее ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/config.HTTPError'
      summary: Удалить книгу
      tags:
      - Книги
    get:
      description: Извлекает книгу по ее ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/config.HTTPError'
      summary: Получить книгу по ID
      tags:
      - Книги
    put:
      consumes:
      - application/json
      description: Обновляет книгу по ее ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Book object
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/config.HTTPError'
      summary: Обновить книгу
      tags:
      - Книги
  /chapters:
    get:
      description: Извлекает список всех глав
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Chapter'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/config.HTTPError'
      summary: Получить список глав
      tags:
      - Главы
    post:
      consumes:
      - application/json
      description: Создает новую главу
      parameters:
      - description: Chapter object
        in: body
        name: chapter
        required: true
        schema:
          $ref: '#/definitions/models.Chapter'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Chapter'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/config.HTTPError'
      summary: Создать главу
      tags:
      - Главы
  /chapters/{id}:
    delete:
      description: Удаляет главу по ее ID
      parameters:
      - description: ID главы
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Chapter'
        "406":
          description: Not Acceptable
          schema:
            $ref: '#/definitions/config.HTTPError'
      summary: Удалить главу
      tags:
      - Главы
    get:
      description: Извлекает главу по ее ID
      parameters:
      - description: ID главы
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Chapter'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/config.HTTPError'
      summary: Получить главу по ID
      tags:
      - Главы
    put:
      consumes:
      - application/json
      description: Обновляет главу по ее ID
      parameters:
      - description: ID главы
        in: path
        name: id
        required: true
        type: string
      - description: Chapter object
        in: body
        name: chapter
        required: true
        schema:
          $ref: '#/definitions/models.Chapter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Chapter'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/config.HTTPError'
      summary: Обновить главу
      tags:
      - Главы
  /health:
    get:
      description: Возвращает статус приложения
      produces:
      - application/json
      responses:
        "200":
          description: healthy
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/config.HTTPError'
      summary: Получить статус приложения
      tags:
      - Статус приложения
  /pages:
    get:
      description: Извлекает список всех страниц
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Page'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/config.HTTPError'
      summary: Получить список страниц
      tags:
      - Страницы
    post:
      consumes:
      - application/json
      description: Создает новую страницу
      parameters:
      - description: Page object
        in: body
        name: page
        required: true
        schema:
          $ref: '#/definitions/models.Page'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Page'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/config.HTTPError'
      summary: Создать страницу
      tags:
      - Страницы
  /pages/{id}:
    get:
      description: Извлекает страницу по ее ID
      parameters:
      - description: ID страницы
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Page'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/config.HTTPError'
      summary: Получить страницу по ID
      tags:
      - Страницы
  /paragraphs:
    get:
      description: Извлекает список всех параграфов
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Paragraph'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/config.HTTPError'
      summary: Получить список параграфов
      tags:
      - Параграфы
    post:
      consumes:
      - application/json
      description: Создает новый параграф
      parameters:
      - description: Paragraph object
        in: body
        name: paragraph
        required: true
        schema:
          $ref: '#/definitions/models.Paragraph'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Paragraph'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/config.HTTPError'
      summary: Создать параграф
      tags:
      - Параграфы
  /paragraphs/{id}:
    delete:
      description: Удаляет параграф по его ID
      parameters:
      - description: ID параграфа
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Paragraph'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/config.HTTPError'
      summary: Удалить параграф
      tags:
      - Параграфы
    get:
      description: Извлекает параграф по его ID
      parameters:
      - description: ID параграфа
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Paragraph'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/config.HTTPError'
      summary: Получить параграф по ID
      tags:
      - Параграфы
    put:
      consumes:
      - application/json
      description: Обновляет параграф по его ID
      parameters:
      - description: ID параграфа
        in: path
        name: id
        required: true
        type: string
      - description: Paragraph object
        in: body
        name: paragraph
        required: true
        schema:
          $ref: '#/definitions/models.Paragraph'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Paragraph'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/config.HTTPError'
      summary: Обновить параграф
      tags:
      - Параграфы
schemes:
- http
swagger: "2.0"
